{% set title = 'Template functions' %}
{% set prevPage = 'Renderer' %}
{{ generatePageBreadcrumbs(title, _self) }}

{{ "Template functions" | textToHeading('H1') }}

When generating pages, you can use functions that allow you to modify the content.
Functions available during page generation are defined in <a href='{{ getDocumentationPageUrl('Configuration files') }}'>the configuration</a> ( `twig_functions` parameter )

We use the twig template engine, you can get more information about working with functions here: https://twig.symfony.com/doc/1.x/advanced.html#functions

You can also create your own functions and use them for any purpose, such as loading some additional information into a template, filtering data, or formatting the output of any information.
Each function must implement the <a>CustomFunctionInterface</a> interface, implement the `__invoke` magic method, and be added to the configuration.

{{ "How to use a function in a template" | textToHeading('H2') }}

{{ '<pre>&#123;&#123; functionName(...parameters) &#125;&#125;</pre>' }}

{{ "Configuration example" | textToHeading('H2') }}

You can add your custom functions to the configuration like this:

```yaml
twig_functions:
  - class: \SelfDocConfig\Twig\CustomFunction\FindEntitiesClassesByCollectionClassName
  - class: \SelfDocConfig\Twig\CustomFunction\PrintClassCollectionAsGroupedTable
  - class: \SelfDocConfig\Twig\CustomFunction\GetConfigParametersDescription
```

It is important to remember that when a template is inherited, custom functions are not overridden and augmented.
This information is detailed on page <a>Configuration files</a>.

{{ "Defautl template functions" | textToHeading('H2') }}

Several functions are already defined in the base configuration.
There are both general functions for all types of entities, and functions that only serve to process entities that belong to a particular PL.

Here is a list of functions available by default:

<table>
   <thead>
      <tr>
         <th rowspan="3">Function</th>
         <th colspan="3">Parameters</th>
      </tr>
      <tr>
         <th>name</th>
         <th>type</th>
         <th>description</th>
      </tr>
      <tr>
         <th colspan="4"></th>
      </tr>
   </thead>
   <tbody>
    {% for function in phpClassEntityCollection.filterByPaths([
            '/src/Core/Renderer/Twig/Function',
            '/src/LanguageHandler/Php/Renderer/Twig/Function'
        ])
        .filterByInterfaces(['BumbleDocGen\\Core\\Renderer\\Twig\\Function\\CustomFunctionInterface'])
        .getOnlyInstantiable()
    %}
    {% set twigFunctionData = function.getPluginData('twigFunctionClassParserPlugin') %}
    {% if twigFunctionData %}
        {% set paramsCount = twigFunctionData.parameters | length %}
            {% for parameter in twigFunctionData.parameters %}
              <tr>
                 {% if loop.index == 1 %}
                 <td rowspan="{{ paramsCount * 2 - 1 }}">
                    <a href="{{ getDocumentedEntityUrl(phpClassEntityCollection, function.getName()) }}">{{ twigFunctionData.name }}</a><br>
                    {% if function.isInternal() %}<i><b>:warning: For internal use</b></i><br>{% endif %}
                    {{ function.getDescription() | removeLineBrakes }}
                    {% if function.getDocNote() %}<br><i><b>:warning: {{ function.getDocNote() }}</b></i><br>{% endif %}
                 </td>
                 {% endif %}
                 <td>
                    <b>${{ parameter.name }}</b>
                 </td>
                 <td>
                    <i>{{ parameter.type | strTypeToUrl(phpClassEntityCollection, true, true) }}</i>
                 </td>
                 <td>{{ parameter.description | removeLineBrakes }}</td>
              </tr>
              {% if loop.last == false %}
              <tr>
                 <td colspan="3"></td>
              </tr>
              {% endif %}
            {% endfor %}
        {% if loop.last == false %}
          <tr>
             <td colspan="4">&nbsp;</td>
          </tr>
        {% endif %}
    {% endif %}
    {% endfor %}
   </tbody>
</table>
